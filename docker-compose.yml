# Based on "docker-compose-mysql-es.yml", see
# https://github.com/temporalio/docker-compose

version: "3.5"
services:
  elasticsearch:
    container_name: temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - temporal-network
    ports:
      - 9200:9200

  mysql:
    container_name: temporal-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=asdf
      - MYSQL_DATABASE=s2sworker
    image: mysql:${MYSQL_VERSION}
    networks:
      - temporal-network
    ports:
      - 3306:3306

  temporal:
    container_name: temporal
    depends_on:
      - mysql
      - elasticsearch
    environment:
      - DB=mysql
      - MYSQL_USER=root
      - MYSQL_PWD=asdf
      - MYSQL_SEEDS=mysql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    stdin_open: true
    tty: true

  temporal-web:
    container_name: temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
    image: temporalio/web:${TEMPORAL_WEB_VERSION}
    networks:
      - temporal-network
    ports:
      - 8088:8088

  # This service is similar to the "s2s-api" service in
  # https://github.com/stock2shop/api/blob/master/docker-compose.yml
  # Unlike stock2shop/app, which uses phusion/baseimage,
  # https://github.com/stock2shop/app/blob/master/scripts/docker/amd64/base/Dockerfile
  # this repo won't require a running cron daemon inside the container
  # https://github.com/phusion/baseimage-docker#overview
  s2s-worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PHP_IMAGE_VERSION: ${PHP_IMAGE_VERSION}
        RR_VERSION: ${RR_VERSION}
    image: s2s-worker-image
    container_name: s2s-worker
    environment:
      - "TEMPORAL_CLI_ADDRESS=temporal:7233"
    command:
      - "/usr/local/bin/wait-for-temporal-and-db.sh"
      - "temporal"
      - "rr"
      - "serve"
      - "-c"
      - "/app/.rr.yaml"
    volumes:
      - ./:/app
    networks:
      - temporal-network

# temporal-network network enables using service name for connections,
# all the docker compose services must be one the same network
networks:
  temporal-network:
    driver: bridge
    name: temporal-network
